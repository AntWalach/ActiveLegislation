.container
  .petition-header.row.align-items-center.mb-4
    .title-section.col-md-8.col-12
      h1.display-4.mb-3 = @petition.title
      
      - if @petition.tag_list.any?
        p.text-muted.mb-1.mr-3
          strong Tagi: 
          = @petition.tag_list.join(', ')
      p.text-muted.mb-1.mr-3
        | • Data utworzenia: 
        strong = l(@petition.created_at, format: :long)
      p.text-muted.mb-1.mr-3
        | • Autor: 
        strong = @petition.creator_name
      p.lead.mb-1
        strong Status: 
        span = @petition.status

      - if @petition.assigned_official.nil?
        = link_to 'Przypisz do mnie', assign_to_me_officials_petition_path(@petition), method: :post, class: 'btn btn-success btn-sm'
      

    - if @petition.main_image.attached?
      .main-image.col-md-4.col-12.text-center
        = image_tag @petition.main_image.variant(resize_to_limit: [400, 300]), class: 'img-fluid rounded shadow-sm'

  .petition-content
    .card.mb-4
      .card-header.bg-light
        h3 Opis
      .card-body
        = @petition.description.body

    .card.mb-4
      .card-header.bg-light
        h3 Uzasadnienie
      .card-body
        = @petition.justification.body
        
    - if @petition.external_links.present?
      .card.mb-4
        .card-header.bg-light
          h3 Linki zewnętrzne
        .card-body
          .list-group
            - @petition.external_links.split("\n").each do |link|
              a.list-group-item.list-group-item-action href=link target="_blank" rel="noopener noreferrer" = link

    - if @petition.attachments.attached?
      .card.mb-4
        .card-header.bg-light
          h3 Załączniki
        .card-body
          .list-group
            - @petition.attachments.each do |attachment|
              a.list-group-item.list-group-item-action href=rails_blob_path(attachment, disposition: "attachment") = attachment.filename.to_s
    - else
      p.text-muted Brak załączników.

    - if @petition.images.attached?
      .card.mb-4
        .card-header.bg-light
          h3 Załączone zdjęcia
        .card-body
          .row
            - @petition.images.each do |image|
              .col-md-4.mb-3
                = image_tag image.variant(resize_to_limit: [800, 600]), class: 'img-fluid rounded shadow-sm'

    - if @petition.public_comment.present?
      .card.mb-4
        .card-header.bg-light
          h3 Komentarz publiczny
        .card-body
          = sanitize(@petition.public_comment.to_s, tags: %w(p strong em), attributes: %w(class))

  hr
hr

h3 Komentarze
= render 'officials/petitions/comments/comments', comments: @comments

- if @petition.assigned_official == current_user
  - if can?(:add_comment, @petition)
    .floating-comment-form(data-controller="toggle-form")
      button.btn.btn-secondary(type="button" data-action="toggle-form#toggle") Narzędzia Urzędnika
      
      br
      .form-content(data-toggle-form-target="formContent")
        br
        = simple_form_for @petition, url: transfer_officials_petition_path(@petition), method: :post, html: { local: true } do |f|
          .form-group
            = f.input :assigned_official_id, as: :select, collection: Official.where(department: current_user.department).map { |o| [o.first_name, o.id] }, prompt: "Wybierz urzędnika", input_html: { class: 'form-control' }
          .form-group
            = f.button :submit, "Przekaż", class: 'btn btn-primary btn-block'
        hr
        br
        = render 'officials/petitions/comments/form', comment: @comment

        hr

        / Akcje urzędnika
        - if @petition.submitted?
          = link_to 'Zatwierdź petycję', approve_officials_petition_path(@petition), method: :post, class: 'btn btn-success btn-block mb-2'
          = link_to 'Odrzuć petycję', reject_officials_petition_path(@petition), method: :post, data: { confirm: "Czy na pewno chcesz odrzucić tę petycję?" }, class: 'btn btn-danger btn-block mb-2'
        - elsif @petition.under_review?
          = link_to 'Udziel odpowiedzi', '#', class: 'btn btn-primary btn-block mb-2', data: { action: 'toggle-form#toggleResponseForm' }
          
          / Formularz odpowiedzi (ukryty domyślnie)
          .response-form(data-toggle-form-target="responseForm", style="display: none;")
            = form_with url: respond_officials_petition_path(@petition), method: :post, local: true do |f|
              .form-group
                = f.label :comments, "Treść odpowiedzi"
                = f.text_area :comments, class: 'form-control', rows: 3
              .form-group
                = f.submit 'Wyślij odpowiedź', class: 'btn btn-success btn-block'



